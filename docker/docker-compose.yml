version: '3.3'

services:

  postgres:
    image: postgres:latest
    env_file:
      - .develop
    volumes:
      - ../db:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  ngix:
    image: nginx:1.15-alpine
    restart: always
    volumes:
      - ../static:/usr/share/nginx/html
      - ./nginx.template:/etc/nginx/nginx.conf
      - ./nginx.servers.template:/etc/nginx/conf.d/default.conf
    links:
      - api:api
    depends_on:
      - static
      - api
    labels:
      - 'traefik.http.routers.martires.rule=Host(`martires.localhost`)'

  static:
    build:
      context: .
      dockerfile: static.Dockerfile
    volumes:
      - ../static:/app
    ports:
      - "3000:3000"
    environment:
     - APP_ENV=development
     - APP_PATH=/app
    command: /bin/bash -c "./build.sh"
    depends_on:
      - api

  api:
    build:
      context: ../api
      dockerfile: ../docker/Dockerfile
    volumes:
      - ../api:/usr/src/app
    environment:
      - APP_SETTINGS_PATH=/usr/src/app/config/settings.py
      - APP_ENV=development
      - APP_PATH=/usr/src/app
    command: /bin/bash -c "./run.sh"

  mailhog:
    image: mailhog/mailhog
    labels:
      - 'traefik.http.routers.mailhog.rule=Host(`mailhog.localhost`)'
      - 'traefik.http.services.mailhog.loadbalancer.server.port=8025'

  portainer:
    image: portainer/portainer
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.http.routers.portainer.rule=Host(`portainer.localhost`)'
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'

  traefik:
    image: traefik
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --log.level=ERROR
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
